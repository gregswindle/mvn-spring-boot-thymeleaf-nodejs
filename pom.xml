<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>mvn-spring-boot-thymeleaf-nodejs</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>mvn-spring-boot-thymeleaf-nodejs</name>
	<description>Starter project for designing HTML templates with Spring Boot, Thymeleaf, and Node.js tooling.</description>

  <url>https://github.com/gregswindle/mvn-spring-boot-thymeleaf-nodejs</url>
	<inceptionYear>2017</inceptionYear>
	<organization>
		<name>gregswindle</name>
		<url>https://github.com/gregswindle</url>
	</organization>
	<licenses>
		<license>
			<name>MIT</name>
			<url>LICENSE</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Greg Swindle</name>
			<url>https://github.com/gregswindle</url>
			<id>gregswindle</id>
			<email>greg@swindle.net</email>
			<timezone>UTC-05:00</timezone>
		</developer>
	</developers>


	<scm>
		<url>https://github.com/gregswindle/mvn-spring-boot-thymeleaf-nodejs</url>
		<connection>scm:git:https://github.com/gregswindle/mvn-spring-boot-thymeleaf-nodejs</connection>
		<developerConnection>scm:git:https://github.com/gregswindle/mvn-spring-boot-thymeleaf-nodejs</developerConnection>
		<tag>HEAD</tag>
	</scm>




	<issueManagement>
		<system>GitHub</system>
		<url>${project.url}/issues</url>
	</issueManagement><ciManagement>
		<system>travis-ci</system>
		<url>https://travis-ci.org/gregswindle/mvn-spring-boot-thymeleaf-nodejs</url>
	</ciManagement>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.8.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<logback.version>1.2.3</logback.version>
		<maven.test.skip>false</maven.test.skip>
		<npm.output.directory>target/frontend-templates</npm.output.directory>
		<ognl.version>3.2.3</ognl.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<snyk.api.token>${env.SNYK_TOKEN}</snyk.api.token>
		<!-- Setting failOnSeverity to any of the values (low, medium or high)
			will fail the Maven build if a severity is found at or above what was configured.
			This configuration is optional, and will be set to low if not defined. Setting
			it to false will never fail the build. -->
		<snyk.failOnSeverity>false</snyk.failOnSeverity>
		<snyk.maven.plugin.version>1.1.1</snyk.maven.plugin.version>
		<!-- The org configuration element sets under which of your Snyk organizations
			the project will be recorded. Leaving out this configuration will record
			the project under your default organization. -->
		<snyk.org>gregswindle</snyk.org>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- https://snyk.io/vuln/SNYK-JAVA-CHQOSLOGBACK-30208 -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<!-- https://snyk.io/vuln/SNYK-JAVA-OGNL-30474 -->
		<dependency>
			<groupId>ognl</groupId>
			<artifactId>ognl</artifactId>
			<version>${ognl.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>io.snyk</groupId>
				<artifactId>snyk-maven-plugin</artifactId>
				<version>${snyk.maven.plugin.version}</version>
				<executions>
					<execution>
						<id>snyk-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
					<execution>
						<id>snyk-monitor</id>
						<phase>install</phase>
						<goals>
							<goal>monitor</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<apiToken>${snyk.api.token}</apiToken>
					<failOnSeverity>medium</failOnSeverity>
					<org>${snyk.org}</org>
				</configuration>
			</plugin>

			<!-- Running NPM Scripts through maven -->
			<!-- @see https://git.io/vFPWT -->

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<!-- Required: The following will ensure `npm install` is called before
						anything else during the 'Default Lifecycle' -->
					<execution>
						<id>npm install (initialize)</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<!-- <phase>initialize</phase> -->
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Required: The following will ensure `npm install` is called before
						anything else during the 'Clean Lifecycle' -->
					<execution>
						<id>npm install (clean)</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-clean</phase>
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
					</execution>

					<!-- Optional: The following will output the npm configuration. I do
						this so my CI logs will show the npm information used for the build -->
					<execution>
						<id>npm config list (validate)</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<!-- <phase>validate</phase> -->
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>config</argument>
								<argument>list</argument>
							</arguments>
						</configuration>
					</execution>

					<!-- Required: This following calls `npm run build` where 'build' is
						the script name I used in my project, change this if yours is different -->
					<execution>
						<id>npm run build (compile)</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<!-- <phase>compile</phase> -->
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>run</argument>
								<argument>build</argument>
							</arguments>
						</configuration>
					</execution>


					<!-- Required: The following will run unit tests. My test scripts in
						npm look for the property 'skipTests', so I map it to 'maven.test.skip' Note:
						the douple '-' syntax used below only works with npm >= 2. -->
					<execution>
						<id>npm run test (test)</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<executable>npm</executable>
							<arguments>
                <argument>run</argument>
								<argument>test</argument>
								<argument>--</argument>
								<argument>--skipTests=${maven.test.skip}</argument>
							</arguments>
						</configuration>
					</execution>

					<!-- Required: The following calls the npm script that cleans up the
						build. -->
					<execution>
						<id>npm run clean (clean)</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>clean</phase>
						<configuration>
							<executable>rm</executable>
							<arguments>
								<argument>-rf</argument>
								<argument>node_modules</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>

				<configuration>
					<environmentVariables>
						<!-- The following parameters create an NPM sandbox for CI -->
						<NPM_CONFIG_PREFIX>${basedir}/npm</NPM_CONFIG_PREFIX>
						<NPM_CONFIG_CACHE>${NPM_CONFIG_PREFIX}/cache</NPM_CONFIG_CACHE>
						<NPM_CONFIG_TMP>${project.build.directory}/npmtmp</NPM_CONFIG_TMP>
					</environmentVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
